<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programação on Paula Bicca</title><link>https://paulabicca.github.io/pt-br/tags/programa%C3%A7%C3%A3o/</link><description>Recent content in Programação on Paula Bicca</description><generator>Hugo -- gohugo.io</generator><language>pt-br</language><lastBuildDate>Sat, 15 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://paulabicca.github.io/pt-br/tags/programa%C3%A7%C3%A3o/index.xml" rel="self" type="application/rss+xml"/><item><title>Como o 'Boring Stack' me fez enxergar tecnologia de outro jeito</title><link>https://paulabicca.github.io/pt-br/p/como-o-boring-stack-me-fez-enxergar-tecnologia-de-outro-jeito/</link><pubDate>Sat, 15 Feb 2025 00:00:00 +0000</pubDate><guid>https://paulabicca.github.io/pt-br/p/como-o-boring-stack-me-fez-enxergar-tecnologia-de-outro-jeito/</guid><description>&lt;p>A primeira vez que ouvi falar sobre o termo &amp;ldquo;Boring Stack&amp;rdquo; foi enquanto testava a IA DeepSeek. Estava curiosa para ver como ela responderia, então usei o mesmo prompt que costumo aplicar no ChatGPT: sugerir temas interessantes para o meu blog. Para minha surpresa, a IA trouxe o seguinte assunto: &lt;strong>&amp;ldquo;Por que Devs Sêniores Estão Migrando para Stack ‘Boring’&amp;rdquo;&lt;/strong>.&lt;br>
Intrigada, perguntei: o que exatamente seria um &amp;ldquo;Boring Stack&amp;rdquo;?&lt;br>
E é justamente essa resposta que compartilho com você neste post.&lt;/p>
&lt;h2 id="o-que-é-boring-stack">O que é &amp;ldquo;Boring Stack&amp;rdquo;?
&lt;/h2>&lt;p>O termo &amp;ldquo;Boring Stack&amp;rdquo; foi popularizado por Dan McKinley, ex-engenheiro da Etsy, em um artigo que você pode conferir &lt;a class="link" href="https://mcfunley.com/choose-boring-technology" target="_blank" rel="noopener"
>aqui&lt;/a>.
Nesse texto, ele apresenta uma abordagem de desenvolvimento focada em tecnologias maduras e bem testadas. Ao contrário da busca incessante por novas ferramentas e soluções inovadoras, o &amp;ldquo;Boring Stack&amp;rdquo; valoriza &lt;strong>tecnologias comprovadas, simples e estáveis&lt;/strong>. A ideia central é minimizar os riscos ao escolher tecnologias que já estão estabelecidas e que são bem conhecidas pela comunidade. Essa abordagem prioriza &lt;strong>estabilidade, manutenção&lt;/strong> e &lt;strong>produtividade a longo prazo&lt;/strong> em detrimento do apelo de soluções modernas, mas incertas.
Exemplos típicos de um &amp;ldquo;Boring Stack&amp;rdquo; incluem:&lt;/p>
&lt;ul>
&lt;li>MySQL, PHP, Vanilla JS e Python&lt;/li>
&lt;/ul>
&lt;h2 id="características-do-boring-stack">Características do &amp;ldquo;Boring Stack&amp;rdquo;
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Simplicidade&lt;/strong>: As tecnologias escolhidas são intuitivas e fáceis de usar. Isso permite que os desenvolvedores se concentrem na resolução de problemas de negócios, em vez de se perderem em complexidades técnicas.&lt;/li>
&lt;li>&lt;strong>Eficiência&lt;/strong>: Ferramentas bem documentadas e amplamente conhecidas tornam o desenvolvimento mais rápido e eficiente. Problemas comuns são mais fáceis de resolver, e o time pode avançar sem perder tempo com novas dificuldades inesperadas.&lt;/li>
&lt;li>&lt;strong>Manutenção&lt;/strong>: Tecnologias estabelecidas geralmente possuem um ciclo de vida mais longo e são mais fáceis de manter ao longo do tempo. Isso é essencial para ambientes corporativos, onde a manutenção e os custos a longo prazo podem se tornar um desafio.&lt;/li>
&lt;li>&lt;strong>Escalabilidade&lt;/strong>: Apesar de priorizar a simplicidade, o Boring Stack ainda pode ser escalável. A escolha de frameworks e ferramentas que oferecem suporte a mudanças e crescimento é uma característica importante dessa abordagem.&lt;/li>
&lt;/ol>
&lt;h2 id="vantagens-do-boring-stack">Vantagens do &amp;ldquo;Boring Stack&amp;rdquo;
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>Redução do Risco&lt;/strong>: Ao adotar tecnologias comprovadas, os desenvolvedores minimizam os riscos de falhas inesperadas que podem ocorrer ao usar novas soluções não testadas.&lt;/li>
&lt;li>&lt;strong>Comunidade e Suporte&lt;/strong>: Tecnologias maduras geralmente possuem comunidades grandes e ativas, o que facilita o suporte, a resolução de problemas e a troca de experiências.&lt;/li>
&lt;li>&lt;strong>Menor Curva de Aprendizado&lt;/strong>: Como essas tecnologias são amplamente utilizadas, os desenvolvedores podem rapidamente adaptar-se ao projeto sem a necessidade de aprender novas ferramentas ou conceitos complicados.&lt;/li>
&lt;/ul>
&lt;h2 id="desvantagens-do-boring-stack">Desvantagens do &amp;ldquo;Boring Stack&amp;rdquo;
&lt;/h2>&lt;ol>
&lt;li>&lt;strong>Falta de Inovação&lt;/strong>: O maior risco de adotar um &amp;ldquo;Boring Stack&amp;rdquo; é a falta de inovação. Tecnologias que são bem testadas podem não ser tão ousadas ou revolucionárias quanto as mais novas, resultando em soluções que podem parecer desatualizadas.&lt;/li>
&lt;li>&lt;strong>Limitações de Escalabilidade&lt;/strong>: Embora muitas das tecnologias mais antigas sejam robustas, elas podem não ser tão escaláveis quanto soluções mais modernas que foram desenvolvidas para atender a novos padrões arquitetônicos.&lt;/li>
&lt;li>&lt;strong>Menos Flexibilidade&lt;/strong>: O uso de tecnologias estabelecidas pode limitar a flexibilidade em termos de adaptação às mudanças de mercado ou às novas demandas tecnológicas.&lt;/li>
&lt;/ol>
&lt;h2 id="a-filosofia-por-trás-da-escolha-do-boring-stack">A Filosofia por Trás da Escolha do &amp;ldquo;Boring Stack&amp;rdquo;
&lt;/h2>&lt;p>De acordo com Dan McKinley, a migração para stacks mais simples tem uma lógica clara. Ele explica que cada empresa recebe um número limitado de &amp;ldquo;tokens de inovação&amp;rdquo;. Cada escolha tecnológica ousada, como a adoção de um banco de dados novo ou a utilização de uma linguagem menos popular, consome um desses tokens. Com o tempo, as empresas devem ser mais criteriosas ao gastar esses tokens, pois inovar constantemente pode resultar em uma sobrecarga de complexidade e uma perda de foco nas metas principais da empresa.&lt;/p>
&lt;p>McKinley compartilha a visão de que a tecnologia &amp;ldquo;chata&amp;rdquo; pode ser uma escolha muito sensata em muitos casos. Bancos de dados como &lt;strong>MySQL&lt;/strong> e &lt;strong>Postgres&lt;/strong>, por exemplo, podem ser considerados sem graça, mas são sólidos, escaláveis e bem compreendidos. O problema com tecnologias mais recentes e inovadoras é o grande número de incógnitas desconhecidas que elas trazem. Um banco de dados novo pode ter problemas de performance imprevistos ou falhas que só se tornam evidentes em condições específicas.&lt;/p>
&lt;h2 id="a-sabedoria-por-trás-da-escolha-de-tecnologia">A Sabedoria por Trás da Escolha de Tecnologia
&lt;/h2>&lt;p>A escolha de tecnologias não é um processo isolado. Cada escolha impacta toda a organização, aumentando a complexidade do sistema e exigindo mais recursos para manutenção e operação. Como McKinley observa, a &amp;ldquo;melhor ferramenta para o trabalho&amp;rdquo; nem sempre é a que parece mais avançada, mas sim a que tem o menor custo total de operação e manutenção. As escolhas tecnológicas devem ser feitas com uma visão a longo prazo, onde o objetivo principal é manter o sistema funcionando de forma confiável e eficiente, sem ser sobrecarregado por inovações que podem não agregar valor imediato.&lt;/p>
&lt;h2 id="conclusão-a-liberdade-na-escolha-consciente">Conclusão: A Liberdade na Escolha Consciente
&lt;/h2>&lt;p>Adotar um stack &amp;ldquo;boring&amp;rdquo; não significa abrir mão da inovação, mas sim garantir que as escolhas tecnológicas estejam alinhadas com os objetivos de longo prazo da empresa. Desenvolvedores experientes sabem que, muitas vezes, a chave para o sucesso é a capacidade de fazer escolhas tecnológicas sensatas e fundamentadas, sem se deixar levar pelo hype das últimas novidades.&lt;/p>
&lt;p>A verdadeira liberdade no desenvolvimento vem de fazer escolhas conscientes e bem-informadas, onde a estabilidade e a eficiência são priorizadas, permitindo que a equipe se concentre no que realmente importa: resolver problemas e criar soluções de qualidade.&lt;/p>
&lt;p>Se você está pensando em adotar um &amp;ldquo;Boring Stack&amp;rdquo; para o seu próximo projeto, lembre-se de que o simples pode ser poderoso, e a sabedoria muitas vezes reside na escolha das tecnologias que, embora aparentemente sem graça, garantem um futuro mais seguro e sustentável para seus projetos.&lt;/p></description></item></channel></rss>