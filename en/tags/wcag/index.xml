<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>WCAG on Paula Bicca</title><link>https://paulabicca.github.io/en/tags/wcag/</link><description>Recent content in WCAG on Paula Bicca</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 29 Nov 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://paulabicca.github.io/en/tags/wcag/index.xml" rel="self" type="application/rss+xml"/><item><title>WAI-ARIA &amp; semantic HTML: Partners in Accessibility</title><link>https://paulabicca.github.io/en/p/wai-aria-semantic-html-partners-in-accessibility/</link><pubDate>Fri, 29 Nov 2024 00:00:00 +0000</pubDate><guid>https://paulabicca.github.io/en/p/wai-aria-semantic-html-partners-in-accessibility/</guid><description>&lt;p>When it comes to web development, &lt;strong>semantic HTML&lt;/strong> and &lt;strong>WAI-ARIA&lt;/strong> are like two inseparable partners, working together to make your site more accessible and easier to understand. You probably already know about &lt;strong>semantic HTML&lt;/strong>, but what is &lt;strong>WAI-ARIA&lt;/strong>? Let&amp;rsquo;s unravel both in a simple and uncomplicated way&lt;/p>
&lt;hr>
&lt;h2 id="semantic-html-the-basics-of-structure">Semantic HTML: The Basics of Structure
&lt;/h2>&lt;p>First, let&amp;rsquo;s talk about &lt;strong>semantic HTML&lt;/strong>. What does this mean? Basically, it&amp;rsquo;s the use of HTML tags that have a clear and well-defined meaning, both for the browser and for users. By using semantic elements, you are creating code that not only makes more sense to developers, but also improves the experience of users, especially those with disabilities.&lt;/p>
&lt;p>For example, instead of using &lt;code>&amp;lt;div&amp;gt;&lt;/code> and adding style attributes to make it behave like a button, you should use the &lt;code>&amp;lt;button&amp;gt;&lt;/code> tag, which is already semantically defined for this function. This helps with accessibility and makes the code easier to understand.&lt;/p>
&lt;p>Example of Semantic HTML:&lt;/p>
&lt;p>&lt;strong>Avoid:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">div&lt;/span> &lt;span class="na">role&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;button&amp;#34;&lt;/span> &lt;span class="na">aria-label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Send&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">div&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>Prefer:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span> &lt;span class="na">aria-label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;Send&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Opting for &lt;strong>semantic HTML&lt;/strong>, such as &lt;code>&amp;lt;button&amp;gt;&lt;/code>, not only improves accessibility, but also offers other benefits:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Better performance on mobile devices:&lt;/strong> Semantic HTML is lighter and makes it easier to create responsive layouts.&lt;/li>
&lt;li>&lt;strong>Better SEO:&lt;/strong> Search engines give more relevance to semantic elements such as titles and links, making it easier to index your content.&lt;/li>
&lt;li>&lt;strong>Ease of development:&lt;/strong> The code is cleaner, more intuitive and easier to understand.&lt;/li>
&lt;/ul>
&lt;p>Now let&amp;rsquo;s look at some examples.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Generic Example&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Semantic Example&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Description&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div id=&amp;quot;header&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;header&amp;gt;&lt;/code>&lt;/td>
&lt;td>Defines the header of a page or section.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div id=&amp;quot;nav&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;nav&amp;gt;&lt;/code>&lt;/td>
&lt;td>Defines a navigation block.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div class=&amp;quot;article&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;article&amp;gt;&lt;/code>&lt;/td>
&lt;td>Represents independent content, such as a post.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div class=&amp;quot;section&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;section&amp;gt;&lt;/code>&lt;/td>
&lt;td>Defines a section or piece of content with a title.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div id=&amp;quot;footer&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;footer&amp;gt;&lt;/code>&lt;/td>
&lt;td>Represents the footer of a page or section.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div class=&amp;quot;main&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;main&amp;gt;&lt;/code>&lt;/td>
&lt;td>Defines the main content of the page.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div id=&amp;quot;aside&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;aside&amp;gt;&lt;/code>&lt;/td>
&lt;td>Represents related but non-essential content.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div class=&amp;quot;heading&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;h1&amp;gt;&lt;/code>, &lt;code>&amp;lt;h2&amp;gt;&lt;/code>, &lt;code>&amp;lt;h3&amp;gt;&lt;/code>, etc.&lt;/td>
&lt;td>Defines headings and subheadings, structuring the content.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;div class=&amp;quot;button&amp;quot;&amp;gt;&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;button&amp;gt;&lt;/code>&lt;/td>
&lt;td>Represents an action button.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="wai-aria-giving-accessibility-a-hand">WAI-ARIA: Giving Accessibility a Hand
&lt;/h2>&lt;p>Now, &lt;strong>WAI-ARIA&lt;/strong> (Accessible Rich Internet Applications) comes into the picture. It&amp;rsquo;s like an extra assistant, helping to make your site accessible when &lt;strong>semantic HTML&lt;/strong> isn&amp;rsquo;t enough to describe the functionality of an element, such as in dynamic applications or more complex interfaces. The &lt;strong>WAI-ARIA&lt;/strong> provides &amp;ldquo;extra information&amp;rdquo; for assistive technologies, such as screen readers, to ensure that all users, regardless of their limitations, can interact with the content efficiently.&lt;/p>
&lt;p>Now that you know what &lt;strong>WAI-ARIA&lt;/strong> is, let&amp;rsquo;s talk about two of its attributes: &lt;strong>aria&lt;/strong> and &lt;strong>role&lt;/strong>.&lt;/p>
&lt;hr>
&lt;h3 id="aria-attributes">ARIA Attributes
&lt;/h3>&lt;p>&lt;strong>ARIA attributes&lt;/strong> are used to provide additional information to assistive technologies, such as screen readers, when standard HTML is not sufficient to clearly describe the functionality or state of an element.&lt;/p>
&lt;p>Below are some common &lt;strong>ARIA attributes&lt;/strong> that can be very useful in your day-to-day development. For a complete list, check the documentation &lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Examples of ARIA Attributes:&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ARIA Attributes&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>aria-label&lt;/strong>&lt;/td>
&lt;td>Provides a descriptive text for interface elements without visible text.&lt;/td>
&lt;td>&lt;code>&amp;lt;button aria-label=&amp;quot;Close&amp;quot;&amp;gt;X&amp;lt;/button&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>aria-hidden&lt;/strong>&lt;/td>
&lt;td>Hides an element from screen readers without affecting its visibility.&lt;/td>
&lt;td>&lt;code>&amp;lt;div aria-hidden=&amp;quot;true&amp;quot;&amp;gt;This content will not be read by the screen reader&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>aria-description&lt;/strong>&lt;/td>
&lt;td>Provides a more detailed description of an element.&lt;/td>
&lt;td>&lt;code>&amp;lt;div aria-description=&amp;quot;This button submits the form&amp;quot;&amp;gt;Enviar&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>contenteditable&lt;/strong>&lt;/td>
&lt;td>Indicates that a field is editable, useful when using a &lt;code>&amp;lt;div&amp;gt;&lt;/code> instead of an &lt;code>&amp;lt;input&amp;gt;&lt;/code>.&lt;/td>
&lt;td>&lt;code>&amp;lt;div contenteditable=&amp;quot;true&amp;quot;&amp;gt;Edit this text&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>aria-required&lt;/strong>&lt;/td>
&lt;td>Marks a form field as required.&lt;/td>
&lt;td>&lt;code>&amp;lt;input type=&amp;quot;text&amp;quot; aria-required=&amp;quot;true&amp;quot; /&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>aria-invalid&lt;/strong>&lt;/td>
&lt;td>Indicates that a field contains an invalid value.&lt;/td>
&lt;td>&lt;code>&amp;lt;input type=&amp;quot;text&amp;quot; aria-invalid=&amp;quot;true&amp;quot; /&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>aria-expanded&lt;/strong>&lt;/td>
&lt;td>Specifies whether a menu or accordion is expanded or collapsed.&lt;/td>
&lt;td>&lt;code>&amp;lt;button aria-expanded=&amp;quot;false&amp;quot;&amp;gt;Menu&amp;lt;/button&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>aria-labelledby&lt;/strong>&lt;/td>
&lt;td>References another element to provide an accessible name.&lt;/td>
&lt;td>&lt;code>&amp;lt;h1 id=&amp;quot;header&amp;quot;&amp;gt;Title&amp;lt;/h1&amp;gt;&amp;lt;div aria-labelledby=&amp;quot;header&amp;quot;&amp;gt;Content associated with the title&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>aria-details&lt;/strong>&lt;/td>
&lt;td>Provides additional information or a more detailed description of an element.&lt;/td>
&lt;td>&lt;code>&amp;lt;button aria-details=&amp;quot;info&amp;quot;&amp;gt;More information&amp;lt;/button&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h3 id="aria-roles">ARIA Roles
&lt;/h3>&lt;p>By default, many semantic &lt;strong>HTML elements&lt;/strong> already have predefined roles. For example, an &lt;code>&amp;lt;input type=&amp;quot;radio&amp;quot;&amp;gt;&lt;/code> has the role of &amp;ldquo;radio.&amp;rdquo; Non-semantic elements like &lt;code>&amp;lt;div&amp;gt;&lt;/code> and &lt;code>&amp;lt;span&amp;gt;&lt;/code> require the role attribute to define their function.&lt;/p>
&lt;p>Below are some common roles that can be very useful in your day-to-day development. For a complete list, check the documentation &lt;a class="link" href="https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles" target="_blank" rel="noopener"
>here&lt;/a>.&lt;/p>
&lt;hr>
&lt;p>&lt;strong>Role Examples:&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>ARIA Roles&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Example&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>role=&amp;ldquo;alert&amp;rdquo;&lt;/strong>&lt;/td>
&lt;td>Communicates an important and usually time-sensitive message to the user.&lt;/td>
&lt;td>&lt;code>&amp;lt;div role=&amp;quot;alert&amp;quot;&amp;gt;Error: required field not filled in.&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>role=&amp;ldquo;definition&amp;rdquo;&lt;/strong>&lt;/td>
&lt;td>Indicates that the element contains the definition of a term or concept.&lt;/td>
&lt;td>&lt;code>&amp;lt;div role=&amp;quot;definition&amp;quot;&amp;gt;Accessibility: the practice of making the web accessible to everyone.&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>role=&amp;ldquo;search&amp;rdquo;&lt;/strong>&lt;/td>
&lt;td>Defines the search area of the page.&lt;/td>
&lt;td>&lt;code>&amp;lt;div role=&amp;quot;search&amp;quot;&amp;gt;Search box&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>role=&amp;ldquo;modal&amp;rdquo;&lt;/strong>&lt;/td>
&lt;td>Indicates that the element is a modal.&lt;/td>
&lt;td>&lt;code>&amp;lt;div role=&amp;quot;modal&amp;quot;&amp;gt;This is a modal&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>role=&amp;ldquo;dialog&amp;rdquo;&lt;/strong>&lt;/td>
&lt;td>Indicates that the element is a dialog window.&lt;/td>
&lt;td>&lt;code>&amp;lt;div role=&amp;quot;dialog&amp;quot;&amp;gt;This is a dialog window&amp;lt;/div&amp;gt;&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="lets-put-it-into-practice">Let&amp;rsquo;s Put It into Practice?
&lt;/h2>&lt;p>And there it is! Now you know how &lt;strong>semantic HTML&lt;/strong> and &lt;strong>WAI-ARIA&lt;/strong> can work together to improve your website&amp;rsquo;s accessibility. Using &lt;strong>semantic HTML&lt;/strong> is like building a house with a solid and well-planned structure, while &lt;strong>WAI-ARIA&lt;/strong> is that final touch that ensures everyone can access and interact with it, regardless of limitations. By applying these practices, you not only make your website more inclusive, but also optimize the user experience and help improve SEO.&lt;/p>
&lt;p>Web accessibility is more than just a good practice — it&amp;rsquo;s a commitment to a fairer and more accessible digital world for everyone.&lt;/p>
&lt;p>Now that you know the basics, how about starting to apply these concepts in your next project? Remember: every small step counts!&lt;/p></description></item><item><title>Shall We Talk About Web Accessibility?</title><link>https://paulabicca.github.io/en/p/shall-we-talk-about-web-accessibility/</link><pubDate>Fri, 15 Nov 2024 20:00:00 +0000</pubDate><guid>https://paulabicca.github.io/en/p/shall-we-talk-about-web-accessibility/</guid><description>&lt;p>Did you know that the first accessibility law in Brazil was enacted in 2000? The &lt;strong>Law No. 10.098&lt;/strong>, dated December 19, 2000, was a starting point for promoting greater inclusion. Even so, despite being over two decades old, accessibility, especially on the web, continues to be a major challenge.&lt;/p>
&lt;p>How many times have you stopped to ask yourself: &lt;strong>&amp;ldquo;Can my site be accessed by everyone?&amp;rdquo;&lt;/strong>&lt;/p>
&lt;p>The reality is that, most of the time, accessibility is not discussed because the information simply doesn&amp;rsquo;t reach people. And without knowledge, it&amp;rsquo;s impossible to make changes. So, how about starting now? Let&amp;rsquo;s explore a little about web accessibility.&lt;/p>
&lt;hr>
&lt;h2 id="what-is-web-accessibility">What is Web Accessibility?
&lt;/h2>&lt;p>Web accessibility goes far beyond catering to people with disabilities. It&amp;rsquo;s about designing digital experiences that are universal, &lt;strong>meaning accessible to everyone&lt;/strong>. This includes people with:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Hearing disabilities&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Cognitive disabilities&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Neurological disabilities&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Physical disabilities&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Visual disabilities&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Speech disabilities&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>But the benefits don&amp;rsquo;t stop there. Accessibility also helps:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Mobile device users, such as those using cell phones or smartwatches.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Elderly people, whose abilities change with aging.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Users with temporary limitations, like a broken arm or lost glasses.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>People facing challenging situations, like using their phone in intense sunlight or in a noisy environment.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Those with slow or expensive connections, who need light and optimized content.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;p>Accessibility is about universal inclusion, and we all benefit from it.&lt;/p>
&lt;hr>
&lt;h2 id="simplifying-wcag-and-its-levels">Simplifying: WCAG and Its Levels
&lt;/h2>&lt;p>The &lt;strong>Web Content Accessibility Guidelines (WCAG)&lt;/strong> were created by the &lt;strong>Web Accessibility Initiative (WAI)&lt;/strong> of the &lt;strong>W3C&lt;/strong>. They provide clear guidelines to make websites, apps, and other digital content more accessible.&lt;/p>
&lt;h3 id="compliance-levels">Compliance Levels
&lt;/h3>&lt;p>The WCAG have three levels of compliance to help measure accessibility:&lt;/p>
&lt;h3 id="level-a-the-basics">&lt;strong>Level A&lt;/strong>: The Basics
&lt;/h3>&lt;p>These are the essential criteria to ensure basic accessibility:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Text Alternatives: Images must have descriptions (&lt;code>alt&lt;/code>) explaining their content.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Content Control: Users must be able to pause or stop animations, videos, and other moving elements.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Keyboard Navigation: The entire site must be usable with just the keyboard.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="level-aa-advanced-accessibility">&lt;strong>Level AA&lt;/strong>: Advanced Accessibility
&lt;/h3>&lt;p>Goes beyond the basics and addresses more barriers, such as:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Color Contrast: A minimum contrast of 4.5:1 between text and background.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Labels and Instructions: Form fields must be clearly labeled.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Resizable Text: Content must be legible even when enlarged by 200%.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h3 id="level-aaa-ideal-standard">&lt;strong>Level AAA&lt;/strong>: Ideal Standard
&lt;/h3>&lt;p>This is the highest level, requiring:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Advanced Contrast: A minimum contrast of 7:1 for text and background.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Simple Language: Clear and direct content, ideal for people with cognitive difficulties.&lt;/strong>&lt;/li>
&lt;li>&lt;strong>Live Audio Captions: Required for live broadcasts such as webinars.&lt;/strong>&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="tools-to-get-started">Tools to Get Started
&lt;/h2>&lt;p>Now that you know what WCAG is and its levels, how can you test and implement accessibility? Here are some useful tools:&lt;/p>
&lt;h3 id="browser-extensions">&lt;strong>Browser Extensions&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>&lt;a class="link" href="https://chromewebstore.google.com/detail/accessible-web-helper/gdnpkbipbholkoaggmlblpbmgemddbgb" target="_blank" rel="noopener"
>Accessible Web Helper&lt;/a>&lt;/strong>: Generates reports and checks color contrast.&lt;/li>
&lt;li>&lt;strong>&lt;a class="link" href="https://chromewebstore.google.com/detail/axe-devtools-web-accessib/lhdoppojpmngadmnindnejefpokejbdd" target="_blank" rel="noopener"
>axe DevTools&lt;/a>&lt;/strong>: Tests accessibility directly in the browser&amp;rsquo;s DevTools.&lt;/li>
&lt;li>&lt;strong>&lt;a class="link" href="https://chromewebstore.google.com/detail/siteimprove-accessibility/djcglbmbegflehmbfleechkjhmedcopn" target="_blank" rel="noopener"
>Siteimprove Accessibility Checker&lt;/a>&lt;/strong>: Simple and efficient, ideal for beginners (I admit, this is my favorite. It was the first one I came across).&lt;/li>
&lt;/ul>
&lt;h3 id="screen-readers">&lt;strong>Screen Readers&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>&lt;strong>&lt;a class="link" href="https://www.nvaccess.org/download/" target="_blank" rel="noopener"
>NVDA&lt;/a>&lt;/strong> (Windows): Free and widely used.&lt;/li>
&lt;li>&lt;strong>&lt;a class="link" href="https://help.gnome.org/users/orca/stable/index.html.en" target="_blank" rel="noopener"
>Orca Screen Reader&lt;/a>&lt;/strong> (Linux): Pre-installed on most Linux distributions but may require adjustments to voice settings.&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>&lt;em>Updates&lt;/em>&lt;/strong>&lt;br>
While researching to write another post, I found some more screen readers tips:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>&lt;a class="link" href="https://support.google.com/chromebook/answer/7031755" target="_blank" rel="noopener"
>ChromeVox&lt;/a>&lt;/strong> (Chromebooks): It comes pre-installed on Chromebooks, making it ideal for those who use Google Chrome.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a class="link" href="https://www.apple.com/accessibility/vision/" target="_blank" rel="noopener"
>VoiceOver&lt;/a>&lt;/strong> (macOS e iOS): Integrated into the system, highly reliable for Apple users.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>&lt;a class="link" href="https://play.google.com/store/apps/details?id=com.google.android.marvin.talkback" target="_blank" rel="noopener"
>TalkBack&lt;/a>&lt;/strong> (Android): Native screen reader for Android devices.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h1 id="the-next-step-is-yours-its-ours">The Next Step is Yours! It’s Ours!
&lt;/h1>&lt;p>Now it’s time to take action. Review your projects, explore the tools, read the &lt;a class="link" href="https://www.w3.org/TR/WCAG21/" target="_blank" rel="noopener"
>documentation&lt;/a> , and start applying accessibility best practices. Remember: developing with accessibility is developing for everyone.&lt;/p>
&lt;p>If you liked this content or have questions about how to get started, leave a comment. Let’s work together to make the web more inclusive :)&lt;/p></description></item></channel></rss>